<div class="mb-8">
  <div class="flex items-center justify-between">
    <div>
      <h1 class="text-2xl font-bold text-gray-900 mb-2">Categories</h1>
      <p class="text-gray-600">Organize your content with categories and subcategories.</p>
    </div>
    <a
      href="/admin/categories/create"
      class="inline-flex items-center px-4 py-2 border border-transparent text-sm font-medium rounded-md text-white bg-primary-600 hover:bg-primary-700 transition-colors"
    >
      <i class="fas fa-plus mr-2"></i>
      New Category
    </a>
  </div>
</div>

<!-- Search and Filter -->
<div class="bg-white shadow rounded-lg p-6 mb-8">
  <div class="flex flex-col sm:flex-row gap-4">
    <div class="flex-1">
      <label for="search" class="sr-only">Search categories</label>
      <div class="relative">
        <div class="absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none">
          <i class="fas fa-search text-gray-400"></i>
        </div>
        <input
          type="text"
          id="search"
          placeholder="Search categories..."
          class="block w-full pl-10 pr-3 py-2 border border-gray-300 rounded-md leading-5 bg-white placeholder-gray-500 focus:outline-none focus:placeholder-gray-400 focus:ring-1 focus:ring-primary-500 focus:border-primary-500"
        >
      </div>
    </div>

    <div class="flex gap-2">
      <select
        id="sort"
        class="block px-3 py-2 border border-gray-300 rounded-md bg-white focus:outline-none focus:ring-1 focus:ring-primary-500 focus:border-primary-500"
      >
        <option value="name">Sort by Name</option>
        <option value="posts">Sort by Post Count</option>
        <option value="created">Sort by Date Created</option>
      </select>

      <button
        type="button"
        onclick="refreshCategories()"
        class="inline-flex items-center px-3 py-2 border border-gray-300 text-sm font-medium rounded-md text-gray-700 bg-white hover:bg-gray-50"
      >
        <i class="fas fa-refresh"></i>
      </button>
    </div>
  </div>
</div>

<!-- Categories Grid -->
<div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6 mb-8" id="categories-grid">
  <!-- Loading state -->
  <div class="bg-white rounded-lg shadow-sm border border-gray-200 p-6 animate-pulse">
    <div class="h-4 bg-gray-200 rounded w-3/4 mb-3"></div>
    <div class="h-3 bg-gray-200 rounded w-1/2 mb-4"></div>
    <div class="flex justify-between items-center">
      <div class="h-3 bg-gray-200 rounded w-1/4"></div>
      <div class="h-8 w-16 bg-gray-200 rounded"></div>
    </div>
  </div>

  <div class="bg-white rounded-lg shadow-sm border border-gray-200 p-6 animate-pulse">
    <div class="h-4 bg-gray-200 rounded w-3/4 mb-3"></div>
    <div class="h-3 bg-gray-200 rounded w-1/2 mb-4"></div>
    <div class="flex justify-between items-center">
      <div class="h-3 bg-gray-200 rounded w-1/4"></div>
      <div class="h-8 w-16 bg-gray-200 rounded"></div>
    </div>
  </div>

  <div class="bg-white rounded-lg shadow-sm border border-gray-200 p-6 animate-pulse">
    <div class="h-4 bg-gray-200 rounded w-3/4 mb-3"></div>
    <div class="h-3 bg-gray-200 rounded w-1/2 mb-4"></div>
    <div class="flex justify-between items-center">
      <div class="h-3 bg-gray-200 rounded w-1/4"></div>
      <div class="h-8 w-16 bg-gray-200 rounded"></div>
    </div>
  </div>
</div>

<!-- Category Management Modal -->
<div
  x-data="{ open: false, category: null, action: 'create' }"
  x-show="open"
  x-transition:enter="transition ease-out duration-300"
  x-transition:enter-start="opacity-0"
  x-transition:enter-end="opacity-100"
  x-transition:leave="transition ease-in duration-200"
  x-transition:leave-start="opacity-100"
  x-transition:leave-end="opacity-0"
  class="fixed inset-0 bg-gray-600 bg-opacity-50 overflow-y-auto h-full w-full z-50"
  id="category-modal"
  style="display: none;"
>
  <div class="relative top-20 mx-auto p-5 border w-11/12 md:w-2/3 lg:w-1/2 shadow-lg rounded-md bg-white">
    <div class="mt-3">
      <div class="flex items-center justify-between mb-4">
        <h3 class="text-lg font-bold text-gray-900" x-text="action === 'create' ? 'Create Category' : 'Edit Category'"></h3>
        <button @click="open = false" class="text-gray-400 hover:text-gray-600">
          <i class="fas fa-times"></i>
        </button>
      </div>

      <form @submit.prevent="submitCategory()" class="space-y-4">
        <div>
          <label for="categoryName" class="block text-sm font-medium text-gray-700 mb-1">Name *</label>
          <input
            type="text"
            id="categoryName"
            x-model="category.name"
            required
            class="block w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-primary-500 focus:border-primary-500"
            placeholder="Category name"
          >
        </div>

        <div>
          <label for="categorySlug" class="block text-sm font-medium text-gray-700 mb-1">Slug</label>
          <input
            type="text"
            id="categorySlug"
            x-model="category.slug"
            class="block w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-primary-500 focus:border-primary-500"
            placeholder="category-slug"
          >
        </div>

        <div>
          <label for="categoryDescription" class="block text-sm font-medium text-gray-700 mb-1">Description</label>
          <textarea
            id="categoryDescription"
            x-model="category.description"
            rows="3"
            class="block w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-primary-500 focus:border-primary-500"
            placeholder="Brief description of this category"
          ></textarea>
        </div>

        <div>
          <label for="categoryColor" class="block text-sm font-medium text-gray-700 mb-1">Color</label>
          <div class="flex items-center space-x-3">
            <input
              type="color"
              id="categoryColor"
              x-model="category.color"
              class="h-10 w-20 border border-gray-300 rounded cursor-pointer"
            >
            <input
              type="text"
              x-model="category.color"
              class="flex-1 px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-primary-500 focus:border-primary-500"
              placeholder="#3B82F6"
            >
          </div>
        </div>

        <div class="flex items-center">
          <input
            type="checkbox"
            id="categoryFeatured"
            x-model="category.featured"
            class="h-4 w-4 text-primary-600 focus:ring-primary-500 border-gray-300 rounded"
          >
          <label for="categoryFeatured" class="ml-2 block text-sm text-gray-700">
            Featured category
          </label>
        </div>

        <div class="flex justify-end space-x-3 pt-4">
          <button
            type="button"
            @click="open = false"
            class="px-4 py-2 border border-gray-300 rounded-md text-sm font-medium text-gray-700 hover:bg-gray-50"
          >
            Cancel
          </button>
          <button
            type="submit"
            class="px-4 py-2 border border-transparent rounded-md text-sm font-medium text-white bg-primary-600 hover:bg-primary-700"
          >
            <span x-text="action === 'create' ? 'Create' : 'Update'"></span>
          </button>
        </div>
      </form>
    </div>
  </div>
</div>

<!-- Bulk Actions -->
<div class="bg-white shadow rounded-lg p-6" x-data="{ selectedCategories: [], showBulkActions: false }">
  <div class="flex items-center justify-between mb-4">
    <h3 class="text-lg font-medium text-gray-900">All Categories</h3>
    <div class="flex items-center space-x-3">
      <div x-show="selectedCategories.length > 0" class="flex items-center space-x-2">
        <span class="text-sm text-gray-500" x-text="`${selectedCategories.length} selected`"></span>
        <button
          @click="showBulkActions = !showBulkActions"
          class="inline-flex items-center px-3 py-1 border border-gray-300 text-xs font-medium rounded text-gray-700 bg-white hover:bg-gray-50"
        >
          <i class="fas fa-ellipsis-h mr-1"></i>
          Actions
        </button>
      </div>

      <div class="relative" x-show="showBulkActions" @click.away="showBulkActions = false">
        <div class="absolute right-0 mt-2 w-48 rounded-md shadow-lg bg-white ring-1 ring-black ring-opacity-5 z-10">
          <div class="py-1">
            <button
              @click="bulkDelete()"
              class="block w-full text-left px-4 py-2 text-sm text-red-700 hover:bg-red-50"
            >
              <i class="fas fa-trash mr-2"></i>
              Delete Selected
            </button>
            <button
              @click="bulkExport()"
              class="block w-full text-left px-4 py-2 text-sm text-gray-700 hover:bg-gray-50"
            >
              <i class="fas fa-download mr-2"></i>
              Export Selected
            </button>
          </div>
        </div>
      </div>
    </div>
  </div>

  <!-- Categories Table -->
  <div class="overflow-x-auto">
    <table class="min-w-full divide-y divide-gray-200" id="categories-table">
      <thead class="bg-gray-50">
        <tr>
          <th scope="col" class="relative px-6 py-3">
            <input
              type="checkbox"
              class="absolute left-4 top-1/2 -mt-2 h-4 w-4 text-primary-600 focus:ring-primary-500 border-gray-300 rounded"
              @change="toggleAllCategories($event)"
            >
          </th>
          <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
            Category
          </th>
          <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
            Posts
          </th>
          <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
            Created
          </th>
          <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
            Status
          </th>
          <th scope="col" class="relative px-6 py-3">
            <span class="sr-only">Actions</span>
          </th>
        </tr>
      </thead>
      <tbody class="bg-white divide-y divide-gray-200" id="categories-tbody">
        <!-- Table content will be populated by JavaScript -->
      </tbody>
    </table>
  </div>

  <!-- Empty State -->
  <div id="empty-state" class="text-center py-12" style="display: none;">
    <div class="mx-auto h-24 w-24 text-gray-400 mb-4">
      <i class="fas fa-tags text-6xl"></i>
    </div>
    <h3 class="text-lg font-medium text-gray-900 mb-2">No categories found</h3>
    <p class="text-gray-600 mb-6">Get started by creating your first category.</p>
    <a
      href="/admin/categories/create"
      class="inline-flex items-center px-4 py-2 border border-transparent text-sm font-medium rounded-md text-white bg-primary-600 hover:bg-primary-700"
    >
      <i class="fas fa-plus mr-2"></i>
      Create Category
    </a>
  </div>
</div>

<script>
let categories = [];
let filteredCategories = [];

document.addEventListener('DOMContentLoaded', function() {
  loadCategories();
  setupEventListeners();
});

function setupEventListeners() {
  const searchInput = document.getElementById('search');
  const sortSelect = document.getElementById('sort');

  searchInput.addEventListener('input', debounce(filterCategories, 300));
  sortSelect.addEventListener('change', filterCategories);
}

async function loadCategories() {
  try {
    const response = await fetch('/api/categories');
    if (response.ok) {
      const data = await response.json();
      categories = data.categories;
      filteredCategories = [...categories];
      renderCategories();
      renderCategoriesTable();
    }
  } catch (error) {
    console.error('Error loading categories:', error);
  }
}

function filterCategories() {
  const searchTerm = document.getElementById('search').value.toLowerCase();
  const sortBy = document.getElementById('sort').value;

  filteredCategories = categories.filter(category =>
    category.name.toLowerCase().includes(searchTerm) ||
    (category.description && category.description.toLowerCase().includes(searchTerm))
  );

  // Sort categories
  filteredCategories.sort((a, b) => {
    switch (sortBy) {
      case 'name':
        return a.name.localeCompare(b.name);
      case 'posts':
        return (b.postCount || 0) - (a.postCount || 0);
      case 'created':
        return new Date(b.createdAt) - new Date(a.createdAt);
      default:
        return 0;
    }
  });

  renderCategories();
  renderCategoriesTable();
}

function renderCategories() {
  const grid = document.getElementById('categories-grid');
  const emptyState = document.getElementById('empty-state');

  if (filteredCategories.length === 0) {
    grid.style.display = 'none';
    emptyState.style.display = 'block';
    return;
  }

  grid.style.display = 'grid';
  emptyState.style.display = 'none';

  grid.innerHTML = filteredCategories.map(category => `
    <div class="bg-white rounded-lg shadow-sm border border-gray-200 p-6 hover:shadow-md transition-shadow">
      <div class="flex items-start justify-between mb-4">
        <div class="flex items-center space-x-3">
          <div
            class="w-4 h-4 rounded-full"
            style="background-color: ${category.color || '#3B82F6'}"
          ></div>
          <h3 class="text-lg font-medium text-gray-900">${category.name}</h3>
          ${category.featured ? '<i class="fas fa-star text-yellow-400" title="Featured"></i>' : ''}
        </div>
        <div class="flex items-center space-x-1">
          <button
            onclick="editCategory('${category._id}')"
            class="p-1 text-gray-400 hover:text-gray-600"
            title="Edit"
          >
            <i class="fas fa-edit"></i>
          </button>
          <button
            onclick="deleteCategory('${category._id}')"
            class="p-1 text-gray-400 hover:text-red-600"
            title="Delete"
          >
            <i class="fas fa-trash"></i>
          </button>
        </div>
      </div>

      <p class="text-gray-600 text-sm mb-4 min-h-12">
        ${category.description || 'No description provided.'}
      </p>

      <div class="flex items-center justify-between">
        <div class="flex items-center space-x-4 text-sm text-gray-500">
          <span class="flex items-center">
            <i class="fas fa-file-alt mr-1"></i>
            ${category.postCount || 0} posts
          </span>
          <span class="flex items-center">
            <i class="fas fa-calendar mr-1"></i>
            ${new Date(category.createdAt).toLocaleDateString()}
          </span>
        </div>
        <a
          href="/blog?category=${category.slug}"
          target="_blank"
          class="inline-flex items-center text-sm font-medium text-primary-600 hover:text-primary-500"
        >
          View
          <i class="fas fa-external-link-alt ml-1"></i>
        </a>
      </div>
    </div>
  `).join('');
}

function renderCategoriesTable() {
  const tbody = document.getElementById('categories-tbody');

  tbody.innerHTML = filteredCategories.map(category => `
    <tr>
      <td class="px-6 py-4 whitespace-nowrap">
        <input
          type="checkbox"
          value="${category._id}"
          class="h-4 w-4 text-primary-600 focus:ring-primary-500 border-gray-300 rounded category-checkbox"
        >
      </td>
      <td class="px-6 py-4 whitespace-nowrap">
        <div class="flex items-center">
          <div
            class="w-3 h-3 rounded-full mr-3"
            style="background-color: ${category.color || '#3B82F6'}"
          ></div>
          <div>
            <div class="text-sm font-medium text-gray-900">${category.name}</div>
            <div class="text-sm text-gray-500">${category.slug}</div>
          </div>
        </div>
      </td>
      <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-900">
        ${category.postCount || 0}
      </td>
      <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500">
        ${new Date(category.createdAt).toLocaleDateString()}
      </td>
      <td class="px-6 py-4 whitespace-nowrap">
        <span class="inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium ${
          category.featured ? 'bg-yellow-100 text-yellow-800' : 'bg-green-100 text-green-800'
        }">
          ${category.featured ? 'Featured' : 'Active'}
        </span>
      </td>
      <td class="px-6 py-4 whitespace-nowrap text-right text-sm font-medium">
        <div class="flex items-center justify-end space-x-2">
          <button
            onclick="editCategory('${category._id}')"
            class="text-primary-600 hover:text-primary-900"
          >
            Edit
          </button>
          <button
            onclick="deleteCategory('${category._id}')"
            class="text-red-600 hover:text-red-900"
          >
            Delete
          </button>
        </div>
      </td>
    </tr>
  `).join('');
}

function refreshCategories() {
  document.getElementById('search').value = '';
  document.getElementById('sort').value = 'name';
  loadCategories();
}

async function editCategory(categoryId) {
  // Implementation would open modal with category data
  console.log('Edit category:', categoryId);
}

async function deleteCategory(categoryId) {
  if (!confirm('Are you sure you want to delete this category? This action cannot be undone.')) {
    return;
  }

  try {
    const response = await fetch(`/api/categories/${categoryId}`, {
      method: 'DELETE',
      headers: {
        'Authorization': `Bearer ${localStorage.getItem('token')}`
      }
    });

    if (response.ok) {
      loadCategories();
    } else {
      alert('Error deleting category');
    }
  } catch (error) {
    console.error('Error deleting category:', error);
    alert('Error deleting category');
  }
}

function debounce(func, wait) {
  let timeout;
  return function executedFunction(...args) {
    const later = () => {
      clearTimeout(timeout);
      func(...args);
    };
    clearTimeout(timeout);
    timeout = setTimeout(later, wait);
  };
}
</script>